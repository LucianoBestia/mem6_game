var searchIndex={};
searchIndex["mem6"] = {"doc":"\"unForGetTable\"  (development name: mem6)","i":[[5,"wasm_bindgen_start","mem6","To start the Wasm application, wasm_bindgen runs this…",null,[[],[["result",["jsvalue"]],["jsvalue"]]]],[5,"__wasm_bindgen_generated_wasm_bindgen_start","","To start the Wasm application, wasm_bindgen runs this…",null,[[]]],[5,"get_url_and_hash","","get url and hash from window.location",null,[[]]],[0,"ackmsgmod","","acknowledge msg",null,null],[5,"remove_ack_msg_from_queue","mem6::ackmsgmod","remove ack msg from queue - return true if there are no…",null,[[["usize"],["rootrenderingcomponent"]],["bool"]]],[5,"prepare_for_ack_msg_waiting","","prepare for ack msg waiting - return random msg_id",null,[[["vdomweak"],["rootrenderingcomponent"]],["usize"]]],[5,"send_msg_and_write_in_queue","","send msg and write in queue",null,[[["wsmessage"],["usize"],["rootrenderingcomponent"]]]],[5,"send_ack","","send ack",null,[[["msgackkind"],["usize"],["rootrenderingcomponent"]]]],[0,"divfordebuggingmod","mem6","information for debugging",null,null],[5,"div_for_debugging","mem6::divfordebuggingmod","information for debugging",null,[[["bump"],["rootrenderingcomponent"]],["node"]]],[0,"divgridcontainermod","mem6","renders the grid container with the images and most…",null,null],[5,"div_grid_container","mem6::divgridcontainermod","prepare the grid container",null,[[["bump"],["size2d"],["rootrenderingcomponent"]],["node"]]],[5,"div_grid_items","","prepare a vector for the Virtual Dom for 'css grid' item…",null,[[["bump"],["rootrenderingcomponent"]],[["node"],["vec",["node"]]]]],[5,"div_grid_item","","on click is the most important part and here is more or…",null,[[["bump"],["str"],["rootrenderingcomponent"]],["node"]]],[5,"play_sound","","play sound mp3",null,[[["usize"],["rootrenderingcomponent"]]]],[5,"grid_width","","grid width in pixels",null,[[],["usize"]]],[5,"grid_height","","grid height in pixels",null,[[],["usize"]]],[5,"max_grid_size","","calculate max with and height for a grid in pixels",null,[[["rootrenderingcomponent"]],["size2d"]]],[5,"usize_window_inner_height","","return window inner height the size of the visible part of…",null,[[],["usize"]]],[5,"usize_window_inner_width","","return window inner width the size of the visible part of…",null,[[],["usize"]]],[5,"usize_window_inner_width_but_max_600","","return window inner width, but maximum 600px the size of…",null,[[],["usize"]]],[17,"SRC_FOR_CARD_FACE_DOWN","","fixed filename for card face down",null,null],[0,"divplayeractionsmod","mem6","renders the div to inform player what to do next and get a…",null,null],[5,"div_player_actions_from_game_status","mem6::divplayeractionsmod","render html element to inform player what to do and get a…",null,[[["bump"],["rootrenderingcomponent"]],["node"]]],[5,"div_unpredicted","","render unpredicted",null,[[["bump"],["rootrenderingcomponent"]],["node"]]],[0,"fetchmod","mem6","Async world With the new async/.await syntax in Rust it is…",null,null],[5,"async_spwloc_fetch_text","mem6::fetchmod","fetch in Rust with async await for executor spawn_local()…",null,[[["string"]]]],[5,"fetch_response","","fetch in Rust with async await for executor spawn_local()…",null,[[["string"]]]],[5,"fetch_only","","fetch only, so it goes in cache",null,[[["string"]]]],[0,"fetchgamesmetadatamod","mem6","fetch the names of all games",null,null],[5,"fetch_games_metadata_request","mem6::fetchgamesmetadatamod","async fetch for gamesmetadata.json",null,[[["string"],["vdomweak"]]]],[5,"set_game_metadata_from_json","","update a field in the struct",null,[[["string"],["vdomweak"]]]],[0,"fetchgameconfigmod","mem6","fetch game_config",null,null],[5,"async_fetch_game_config_request","mem6::fetchgameconfigmod","async fetch for gameconfig.json",null,[[["vdomweak"],["rootrenderingcomponent"]]]],[5,"set_game_config_from_json","","update a field in the struct",null,[[["string"],["vdomweak"]]]],[0,"fetchallimgsforcachemod","mem6","fetch all imgs for cache",null,null],[5,"fetch_all_img_for_cache_request","mem6::fetchallimgsforcachemod","fetch all imgs for the cache",null,[[["rootrenderingcomponent"]]]],[0,"gamedatamod","mem6","structs and methods around game data",null,null],[3,"Size2d","mem6::gamedatamod","2d size (any UM -pixel, items, percent)",null,null],[12,"hor","","horizontal",0,null],[12,"ver","","vertical",0,null],[3,"GameMetadata","","game metadata (for the vector)",null,null],[12,"folder","","folder",1,null],[12,"name","","name",1,null],[12,"description","","description",1,null],[3,"GamesMetadata","","games metadata vector",null,null],[12,"vec_game_metadata","","vec game_metadata",2,null],[3,"GameConfig","","game config",null,null],[12,"card_moniker","","card moniker - the text/name of the card the zero element…",3,null],[12,"img_filename","","img filenames",3,null],[12,"sound_filename","","sound filenames",3,null],[12,"card_width","","card image width",3,null],[12,"card_height","","card image height",3,null],[12,"grid_items_hor","","number of cards horizontally",3,null],[12,"grid_items_ver","","number of card vertically",3,null],[3,"Card","","all the data for one card",null,null],[12,"status","","card status",4,null],[12,"card_number_and_img_src","","field for src attribute for HTML element image and…",4,null],[12,"card_index_and_id","","field for id attribute for HTML element image contains the…",4,null],[3,"MsgInQueue","","save the message in queue to resend it if timeout expires",null,null],[12,"player_ws_uid","","the player that must ack the msg",5,null],[12,"msg_id","","the msg id is a random number",5,null],[12,"msg","","the content of the message if it needs to be resend",5,null],[3,"GameData","","game data",null,null],[12,"my_ws_uid","","my ws client instance unique id. To not listen the echo to…",6,null],[12,"my_nickname","","my nickname",6,null],[12,"my_player_number","","What player am I",6,null],[12,"ws","","web socket. used it to send message onclick.",6,null],[12,"players","","players data as vector of player struct",6,null],[12,"players_ws_uid","","the json string for the ws server to send msgs to other…",6,null],[12,"game_status","","game status: StatusStartPage,Player1,Player2",6,null],[12,"card_grid_data","","vector of cards",6,null],[12,"card_index_of_first_click","","card index of first click",6,null],[12,"card_index_of_second_click","","card index of second click",6,null],[12,"game_name","","content folder name",6,null],[12,"player_turn","","whose turn is now:  player 1,2,3,...",6,null],[12,"content_folders","","content folders vector",6,null],[12,"games_metadata","","games meta data",6,null],[12,"game_config","","game_configs",6,null],[12,"error_text","","error text",6,null],[12,"href","","href",6,null],[12,"href_hash","","href hash the local page #",6,null],[12,"is_reconnect","","is reconnect",6,null],[12,"msgs_waiting_ack","","vector of msgs waiting for ack. If the 3 sec timeout…",6,null],[12,"show_debug_info","","show debug info on the smartphone screen",6,null],[4,"CardStatusCardFace","","the 3 possible statuses of one card",null,null],[13,"Down","","card face down",7,null],[13,"UpTemporary","","card face Up Temporary",7,null],[13,"UpPermanently","","card face up Permanently",7,null],[5,"prepare_players_ws_uid","","from the vector of players prepare a json string for the…",null,[[],["string"]]],[17,"_IMPL_SERIALIZE_FOR_Size2d","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Size2d","","",null,null],[17,"_IMPL_SERIALIZE_FOR_GameMetadata","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_GameMetadata","","",null,null],[17,"_IMPL_SERIALIZE_FOR_GamesMetadata","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_GamesMetadata","","",null,null],[17,"_IMPL_SERIALIZE_FOR_GameConfig","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_GameConfig","","",null,null],[17,"_IMPL_SERIALIZE_FOR_CardStatusCardFace","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_CardStatusCardFace","","",null,null],[17,"_IMPL_SERIALIZE_FOR_Card","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Card","","",null,null],[17,"_IMPL_SERIALIZE_FOR_MsgInQueue","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_MsgInQueue","","",null,null],[11,"prepare_random_data","","prepare new random data",6,[[["self"]]]],[11,"prepare_for_empty","","associated function: before join, there are not random…",6,[[],[["card"],["vec",["card"]]]]],[11,"new","","constructor of game data",6,[[["websocket"],["usize"]],["self"]]],[0,"divnicknamemod","mem6","load and save nickname",null,null],[5,"save_nickname_to_localstorage","mem6::divnicknamemod","save nickname from html input elements to local storage…",null,[[["rootrenderingcomponent"]]]],[5,"load_nickname","","load nickname from local storage",null,[[],["string"]]],[5,"blink_or_not_nickname","","if there is already a nickname don't blink",null,[[["rootrenderingcomponent"]],["string"]]],[5,"nickname_onkeyup","","save on every key stroke",null,[[["event"],["rootrenderingcomponent"]]]],[5,"group_id_onkeyup","","group id key stroke",null,[[["event"]]]],[0,"logmod","mem6","logging in wasm",null,null],[5,"debug_write","mem6::logmod","debug write into sessionstorage",null,[[["str"]]]],[5,"now_string","","string of now time",null,[[],["string"]]],[0,"rootrenderingcomponentmod","mem6","renders the web page",null,null],[3,"RootRenderingComponent","mem6::rootrenderingcomponentmod","Root Rendering Component has all the data needed for play…",null,null],[12,"local_route","","local # hash route",8,null],[12,"html_template","","downloaded html template",8,null],[12,"game_data","","game data will be inside of Root",8,null],[11,"new","","Construct a new `RootRenderingComponent` at the beginning…",8,[[["websocket"],["usize"]],["self"]]],[11,"reset_for_play_again","","reset the data to play again the game",8,[[["self"]]]],[0,"sessionstoragemod","mem6","for debugging texts accessible everywhere",null,null],[5,"add_to_begin_of_debug_text","mem6::sessionstoragemod","add to begin of debug text",null,[[["str"]]]],[5,"utf8_truncate","","utf8 truncate",null,[[["string"],["usize"]]]],[5,"get_debug_text","","get debug text from session storage",null,[[],["string"]]],[5,"save_my_ws_uid","","save my_ws_uid to session storage",null,[[["usize"]]]],[5,"load_my_ws_uid","","load my_ws_uid from session storage",null,[[],["usize"]]],[0,"statusgamedatainitmod","mem6","code flow from this status",null,null],[5,"on_click_start_game","mem6::statusgamedatainitmod","prepares the game data",null,[[["rootrenderingcomponent"]]]],[5,"on_msg_start_game","","on game data init",null,[[["str"],["rootrenderingcomponent"]]]],[0,"statusgameovermod","mem6","code flow from this status",null,null],[5,"div_game_over","mem6::statusgameovermod","play again",null,[[["bump"],["rootrenderingcomponent"]],["node"]]],[5,"on_msg_game_over","","on msg game over",null,[[["rootrenderingcomponent"]]]],[5,"on_msg_play_again","","on msg play again",null,[[["rootrenderingcomponent"]]]],[0,"statusjoinedmod","mem6","code flow for this status",null,null],[5,"on_load_joined","mem6::statusjoinedmod","group_id is the ws_uid of the first player",null,[[["rootrenderingcomponent"]]]],[5,"on_msg_joined","","msg joined",null,[[["string"],["usize"],["rootrenderingcomponent"]]]],[0,"status1stcardmod","mem6","code flow from this status",null,null],[5,"on_click_1st_card","mem6::status1stcardmod","on click",null,[[["vdomweak"],["usize"],["rootrenderingcomponent"]]]],[5,"flip_back","","flip back any not permanent card",null,[[["rootrenderingcomponent"]]]],[5,"on_msg_click_1st_card","","on msg",null,[[["vdomweak"],["usize"],["rootrenderingcomponent"]]]],[5,"on_msg_ack_click_1st_card","","on msg ack",null,[[["usize"],["rootrenderingcomponent"]]]],[5,"update_on_1st_card","","update game data",null,[[["rootrenderingcomponent"]]]],[5,"div_on_1st_card","","render div",null,[[["bump"],["rootrenderingcomponent"]],["node"]]],[0,"status2ndcardmod","mem6","code flow from this status",null,null],[5,"on_click_2nd_card","mem6::status2ndcardmod","on second click The on click event passed by JavaScript…",null,[[["vdomweak"],["usize"],["rootrenderingcomponent"]]]],[5,"is_all_permanently","","is all card permanently on",null,[[["rootrenderingcomponent"]],["bool"]]],[5,"get_is_point","","is it a point or not",null,[[["rootrenderingcomponent"]],["bool"]]],[5,"on_msg_click_2nd_card","","msg player click",null,[[["usize"],["rootrenderingcomponent"],["bool"]]]],[5,"on_msg_ack_player_click2nd_card","","on msg ack player click2nd card",null,[[["vdomweak"],["usize"],["rootrenderingcomponent"]]]],[5,"update_click_2nd_card_point","","msg player click",null,[[["bool"],["rootrenderingcomponent"]]]],[5,"update_click_2nd_card_flip_permanently","","msg player click",null,[[["bool"],["rootrenderingcomponent"]]]],[5,"div_click_2nd_card","","render Play or Wait",null,[[["bump"],["rootrenderingcomponent"]],["node"]]],[0,"statusdrinkmod","mem6","code flow from this status",null,null],[5,"on_msg_drink_end","mem6::statusdrinkmod","on msg",null,[[["vdomweak"],["usize"],["rootrenderingcomponent"]]]],[0,"statustaketurnmod","mem6","code flow from this status",null,null],[5,"on_click_take_turn","mem6::statustaketurnmod","on click",null,[[["vdomweak"],["rootrenderingcomponent"]]]],[5,"on_msg_take_turn","","on msg",null,[[["usize"],["rootrenderingcomponent"]]]],[5,"on_msg_ack_take_turn","","on msg ack",null,[[["usize"],["rootrenderingcomponent"]]]],[5,"update_on_take_turn","","update game data",null,[[["rootrenderingcomponent"]]]],[0,"statuswaitingackmsgmod","mem6","code flow from this status",null,null],[5,"div_waiting_ack_msg","mem6::statuswaitingackmsgmod","waiting ack msg",null,[[["bump"],["rootrenderingcomponent"]],["node"]]],[0,"utilsmod","mem6","small generic helper functions",null,null],[5,"window","mem6::utilsmod","return window object",null,[[],["window"]]],[0,"websocketcommunicationmod","mem6","module that cares about WebSocket communication",null,null],[5,"setup_ws_connection","mem6::websocketcommunicationmod","setup WebSocket connection",null,[[["string"],["usize"]],["websocket"]]],[5,"u32_size","","usize of time",null,[[],["u32"]]],[5,"setup_ws_msg_recv","","receive WebSocket msg callback.",null,[[["websocket"],["vdomweak"]]]],[5,"setup_ws_onerror","","on error write it on the screen for debugging",null,[[["websocket"],["vdomweak"]]]],[5,"setup_ws_onclose","","on close WebSocket connection",null,[[["websocket"],["vdomweak"]]]],[5,"setup_all_ws_events","","setup all ws events",null,[[["websocket"],["vdomweak"]]]],[5,"ws_send_msg","","generic send ws message",null,[[["websocket"],["wsmessage"]]]],[5,"on_response_ws_uid","","msg response with ws_uid, just to check.",null,[[["usize"],["rootrenderingcomponent"]]]],[0,"websocketreconnectmod","mem6","reconnection for websocket must be part of the application.",null,null],[5,"div_reconnect","mem6::websocketreconnectmod","render reconnect",null,[[["bump"],["rootrenderingcomponent"]],["node"]]],[5,"send_msg_for_resync","","send all data to resync gamedata",null,[[["usize"],["rootrenderingcomponent"]]]],[5,"on_msg_all_game_data","","after reconnect receive all the data from other player",null,[[["gamestatus"],["usize"],["string"],["rootrenderingcomponent"]]]],[0,"routermod","mem6","A simple `#`-fragment router for dodrio.",null,null],[5,"start_router","mem6::routermod","Start the router.",null,[[["vdomweak"]]]],[5,"get_url_param_in_hash_after_dot","","get the first param after hash in local route after dot…",null,[[["str"]],["str"]]],[5,"push_first_player_as_group_id","","add the first player as group_id so the msg can be sent to…",null,[[["str"],["rootrenderingcomponent"]]]],[5,"async_fetch_and_write_to_rrc_html_template","","Fetch the html_template and save it in rrc.html_template…",null,[[["vdomweak"],["string"]]]],[0,"fncallermod","mem6","fncallermod  ",null,null],[5,"call_function_string","mem6::fncallermod","html_templating functions that return a String",null,[[["str"],["rootrenderingcomponent"]],["string"]]],[5,"call_listener","","html_templating functions for listeners get a clone of the…",null,[[["str"],["vdomweak"],["rootrenderingcomponent"],["event"]]]],[5,"call_function_node","","html_templating functions that return a Node",null,[[["bump"],["str"],["rootrenderingcomponent"]],["node"]]],[5,"svg_qrcode_to_node","","qrcode svg",null,[[["bump"],["rootrenderingcomponent"]],["node"]]],[5,"game_type_right_onclick","","the arrow to the right",null,[[["vdomweak"],["rootrenderingcomponent"]]]],[5,"game_type_left_onclick","","left arrow button",null,[[["vdomweak"],["rootrenderingcomponent"]]]],[5,"get_input_value","","get value form input html element by id",null,[[["str"]],["string"]]],[5,"open_new_local_page","","fn open new local page with # window.location.set_hash",null,[[["str"]]]],[5,"open_new_tab","","fn open new tab",null,[[["str"]]]],[5,"group_id_joined","","return the text for html template replace empty if there…",null,[[["rootrenderingcomponent"]],["string"]]],[5,"blink_or_not_group_id","","if there is already a group_id don't blink",null,[[["rootrenderingcomponent"]],["string"]]],[0,"htmltemplatemod","mem6","htmltemplatemod   html templating for dodrio",null,null],[4,"HtmlOrSvg","mem6::htmltemplatemod","Svg elements are different because they have a namespace",null,null],[13,"Html","","html element",9,null],[13,"Svg","","svg element",9,null],[5,"get_root_element","","get root element Node. I wanted to use dodrio::Node, but…",null,[[["bump"],["str"],["htmlorsvg"],["rootrenderingcomponent"]],[["result",["node","string"]],["node"],["string"]]]],[5,"fill_element_builder","","Recursive function to fill the tree with a node. Moves &…",null,[[["bump"],["vec",["listener"]],["elementbuilder",["vec","vec","vec"]],["vec",["attribute"]],["rootrenderingcomponent"],["htmlorsvg"],["vec"],["vec",["node"]],["readerformicroxml"]],[["result",["elementbuilder","string"]],["string"],["elementbuilder",["vec","vec","vec"]]]]],[5,"empty_div","","get en empty div node",null,[[["rendercontext"]],["node"]]],[5,"decode_5_xml_control_characters","","decode 5 xml control characters : \" ' & < >…",null,[[["str"]],["string"]]],[11,"from","mem6::gamedatamod","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"approx_from","","",0,[[["src"]],["result"]]],[11,"approx_into","","",0,[[],["result"]]],[11,"value_from","","",0,[[["src"]],["result"]]],[11,"value_into","","",0,[[],["result"]]],[11,"try_from","","",0,[[["src"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"approx_from","","",1,[[["src"]],["result"]]],[11,"approx_into","","",1,[[],["result"]]],[11,"value_from","","",1,[[["src"]],["result"]]],[11,"value_into","","",1,[[],["result"]]],[11,"try_from","","",1,[[["src"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"approx_from","","",2,[[["src"]],["result"]]],[11,"approx_into","","",2,[[],["result"]]],[11,"value_from","","",2,[[["src"]],["result"]]],[11,"value_into","","",2,[[],["result"]]],[11,"try_from","","",2,[[["src"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"approx_from","","",3,[[["src"]],["result"]]],[11,"approx_into","","",3,[[],["result"]]],[11,"value_from","","",3,[[["src"]],["result"]]],[11,"value_into","","",3,[[],["result"]]],[11,"try_from","","",3,[[["src"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"approx_from","","",4,[[["src"]],["result"]]],[11,"approx_into","","",4,[[],["result"]]],[11,"value_from","","",4,[[["src"]],["result"]]],[11,"value_into","","",4,[[],["result"]]],[11,"try_from","","",4,[[["src"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"approx_from","","",5,[[["src"]],["result"]]],[11,"approx_into","","",5,[[],["result"]]],[11,"value_from","","",5,[[["src"]],["result"]]],[11,"value_into","","",5,[[],["result"]]],[11,"try_from","","",5,[[["src"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"approx_from","","",6,[[["src"]],["result"]]],[11,"approx_into","","",6,[[],["result"]]],[11,"value_from","","",6,[[["src"]],["result"]]],[11,"value_into","","",6,[[],["result"]]],[11,"try_from","","",6,[[["src"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"approx_from","","",7,[[["src"]],["result"]]],[11,"approx_into","","",7,[[],["result"]]],[11,"value_from","","",7,[[["src"]],["result"]]],[11,"value_into","","",7,[[],["result"]]],[11,"try_from","","",7,[[["src"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"from","mem6::rootrenderingcomponentmod","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"approx_from","","",8,[[["src"]],["result"]]],[11,"approx_into","","",8,[[],["result"]]],[11,"value_from","","",8,[[["src"]],["result"]]],[11,"value_into","","",8,[[],["result"]]],[11,"try_from","","",8,[[["src"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"as_any","","",8,[[["self"]],["any"]]],[11,"as_any_mut","","",8,[[["self"]],["any"]]],[11,"from","mem6::htmltemplatemod","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"approx_from","","",9,[[["src"]],["result"]]],[11,"approx_into","","",9,[[],["result"]]],[11,"value_from","","",9,[[["src"]],["result"]]],[11,"value_into","","",9,[[],["result"]]],[11,"try_from","","",9,[[["src"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"as_ref","mem6::gamedatamod","",7,[[["self"]],["str"]]],[11,"clone","","",0,[[["self"]],["size2d"]]],[11,"clone","","",1,[[["self"]],["gamemetadata"]]],[11,"clone","","",2,[[["self"]],["gamesmetadata"]]],[11,"clone","","",3,[[["self"]],["gameconfig"]]],[11,"clone","mem6::htmltemplatemod","",9,[[["self"]],["htmlorsvg"]]],[11,"serialize","mem6::gamedatamod","",0,[[["self"],["__s"]],["result"]]],[11,"serialize","","",1,[[["self"],["__s"]],["result"]]],[11,"serialize","","",2,[[["self"],["__s"]],["result"]]],[11,"serialize","","",3,[[["self"],["__s"]],["result"]]],[11,"serialize","","",7,[[["self"],["__s"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","","",5,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",0,[[["__d"]],["result"]]],[11,"deserialize","","",1,[[["__d"]],["result"]]],[11,"deserialize","","",2,[[["__d"]],["result"]]],[11,"deserialize","","",3,[[["__d"]],["result"]]],[11,"deserialize","","",7,[[["__d"]],["result"]]],[11,"deserialize","","",4,[[["__d"]],["result"]]],[11,"deserialize","","",5,[[["__d"]],["result"]]],[11,"render","mem6::rootrenderingcomponentmod","",8,[[["self"],["rendercontext"]],["node"]]]],"p":[[3,"Size2d"],[3,"GameMetadata"],[3,"GamesMetadata"],[3,"GameConfig"],[3,"Card"],[3,"MsgInQueue"],[3,"GameData"],[4,"CardStatusCardFace"],[3,"RootRenderingComponent"],[4,"HtmlOrSvg"]]};
searchIndex["mem6_common"] = {"doc":"mem6_common","i":[[3,"Player","mem6_common","data for one player",null,null],[12,"ws_uid","","ws_uid",0,null],[12,"nickname","","nickname",0,null],[12,"points","","field for src attribute for HTML element image and…",0,null],[4,"WsMessage","","`WsMessage` enum for WebSocket",null,null],[13,"MsgDummy","","MsgDummy",1,null],[12,"dummy","mem6_common::WsMessage","anything",1,null],[13,"MsgRequestWsUid","mem6_common","Request WebSocket Uid - first message to WebSocket server",1,null],[12,"my_ws_uid","mem6_common::WsMessage","ws client instance unique id. To not listen the echo to…",1,null],[12,"players_ws_uid","","json of vector of players for the server to know whom to…",1,null],[13,"MsgResponseWsUid","mem6_common","response from WebSocket server for first message",1,null],[12,"your_ws_uid","mem6_common::WsMessage","WebSocket Uid",1,null],[12,"server_version","","server version",1,null],[13,"MsgPing","mem6_common","MsgPing",1,null],[12,"msg_id","mem6_common::WsMessage","random msg_id",1,null],[13,"MsgPong","mem6_common","MsgPong",1,null],[12,"msg_id","mem6_common::WsMessage","random msg_id",1,null],[13,"MsgJoin","mem6_common","join the group",1,null],[12,"my_ws_uid","mem6_common::WsMessage","ws client instance unique id. To not listen the echo to…",1,null],[12,"players_ws_uid","","json of vector of players for the server to know whom to…",1,null],[12,"my_nickname","","my nickname",1,null],[13,"MsgStartGame","mem6_common","player1 initialize the game data and sends it to all…",1,null],[12,"my_ws_uid","mem6_common::WsMessage","ws client instance unique id. To not listen the echo to…",1,null],[12,"players_ws_uid","","json of vector of players for the server to know whom to…",1,null],[12,"players","","json of vector of players with nicknames and order data",1,null],[12,"card_grid_data","","vector of cards status",1,null],[12,"game_config","","json of game_config",1,null],[12,"game_name","","game name",1,null],[13,"MsgClick1stCard","mem6_common","player click",1,null],[12,"my_ws_uid","mem6_common::WsMessage","this identifies the smartphone, but not the player-in-turn",1,null],[12,"players_ws_uid","","all players for the server to know whom to send msg",1,null],[12,"card_index_of_first_click","","have to send all the state of the game",1,null],[12,"msg_id","","msg id (random)",1,null],[13,"MsgClick2ndCard","mem6_common","player click success",1,null],[12,"my_ws_uid","mem6_common::WsMessage","this identifies the smartphone, but not the player-in-turn",1,null],[12,"players_ws_uid","","all players for the server to know whom to send msg",1,null],[12,"card_index_of_second_click","","have to send all the state of the game",1,null],[12,"is_point","","is point",1,null],[12,"msg_id","","msg id (random)",1,null],[13,"MsgDrinkEnd","mem6_common","drink end",1,null],[12,"my_ws_uid","mem6_common::WsMessage","this identifies the smartphone, but not the player-in-turn",1,null],[12,"players_ws_uid","","all players for the server to know whom to send msg",1,null],[13,"MsgGameOver","mem6_common","Game Over",1,null],[12,"my_ws_uid","mem6_common::WsMessage","this identifies the smartphone, but not the player-in-turn",1,null],[12,"players_ws_uid","","all players for the server to know whom to send msg",1,null],[13,"MsgPlayAgain","mem6_common","Play Again",1,null],[12,"my_ws_uid","mem6_common::WsMessage","this identifies the smartphone, but not the player-in-turn",1,null],[12,"players_ws_uid","","all players for the server to know whom to send msg",1,null],[13,"MsgTakeTurn","mem6_common","player change",1,null],[12,"my_ws_uid","mem6_common::WsMessage","ws client instance unique id. To not listen the echo to…",1,null],[12,"players_ws_uid","","all players for the server to know whom to send msg",1,null],[12,"msg_id","","msg id (random)",1,null],[13,"MsgAck","mem6_common","acknowledge msg, that the receiver received the message",1,null],[12,"my_ws_uid","mem6_common::WsMessage","msg sender uid",1,null],[12,"players_ws_uid","","send msg to this players",1,null],[12,"msg_id","","msg id (random)",1,null],[12,"msg_ack_kind","","kind of ack msg",1,null],[13,"MsgAskPlayer1ForResync","mem6_common","ask player1 for resync",1,null],[12,"my_ws_uid","mem6_common::WsMessage","msg sender uid",1,null],[12,"players_ws_uid","","send msg to this players",1,null],[13,"MsgAllGameData","mem6_common","all game data",1,null],[12,"my_ws_uid","mem6_common::WsMessage","ws client instance unique id. To not listen the echo to…",1,null],[12,"players_ws_uid","","only the players that reconnected",1,null],[12,"players","","json of vector of players with nicknames and order data",1,null],[12,"card_grid_data","","vector of cards status",1,null],[12,"card_index_of_first_click","","have to send all the state of the game",1,null],[12,"card_index_of_second_click","","have to send all the state of the game",1,null],[12,"player_turn","","player turn",1,null],[12,"game_status","","game status",1,null],[4,"GameStatus","mem6_common","the game can be in various statuses and that differentiate…",null,null],[13,"StatusStartPage","","start page",2,null],[13,"StatusJoined","","Joined",2,null],[13,"Status1stCard","","before first card",2,null],[13,"Status2ndCard","","before second card",2,null],[13,"StatusDrink","","drink",2,null],[13,"StatusTakeTurn","","take turn end",2,null],[13,"StatusGameOver","","game over",2,null],[13,"StatusReconnect","","StatusReconnect after a lost connection",2,null],[13,"StatusWaitingAckMsg","","waiting ack msg",2,null],[4,"MsgAckKind","","msg ack kind",null,null],[13,"MsgTakeTurn","","ack for MsgTakeTurn",3,null],[13,"MsgClick1stCard","","ack for MsgClick1stCard",3,null],[13,"MsgClick2ndCard","","ack for MsgClick2ndCard",3,null],[17,"_IMPL_SERIALIZE_FOR_WsMessage","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_WsMessage","","",null,null],[17,"_IMPL_SERIALIZE_FOR_GameStatus","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_GameStatus","","",null,null],[17,"_IMPL_SERIALIZE_FOR_Player","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Player","","",null,null],[17,"_IMPL_SERIALIZE_FOR_MsgAckKind","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_MsgAckKind","","",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"as_ref","","",2,[[["self"]],["str"]]],[11,"as_ref","","",3,[[["self"]],["str"]]],[11,"clone","","",1,[[["self"]],["wsmessage"]]],[11,"clone","","",2,[[["self"]],["gamestatus"]]],[11,"clone","","",3,[[["self"]],["msgackkind"]]],[11,"eq","","",2,[[["self"],["gamestatus"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"serialize","","",1,[[["self"],["__s"]],["result"]]],[11,"serialize","","",2,[[["self"],["__s"]],["result"]]],[11,"serialize","","",0,[[["self"],["__s"]],["result"]]],[11,"serialize","","",3,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",1,[[["__d"]],["result"]]],[11,"deserialize","","",2,[[["__d"]],["result"]]],[11,"deserialize","","",0,[[["__d"]],["result"]]],[11,"deserialize","","",3,[[["__d"]],["result"]]]],"p":[[3,"Player"],[4,"WsMessage"],[4,"GameStatus"],[4,"MsgAckKind"]]};
searchIndex["mem6_server"] = {"doc":"mem6_server","i":[[5,"main","mem6_server","main function of the binary",null,[[]]],[5,"user_connected","","new user connects",null,[[["arc",["mutex"]],["string"],["mutex",["hashmap"]],["websocket"]]]],[5,"receive_message","","on receive WebSocket message",null,[[["message"],["arc"],["usize"]]]],[5,"send_to_other_players","","New message from this user send to all other players…",null,[[["str"],["arc"],["usize"]]]],[5,"user_disconnected","","disconnect user",null,[[["arc"],["usize"]]]],[6,"Users","","Our status of currently connected users. - Key is their id…",null,null]],"p":[]};
addSearchOptions(searchIndex);initSearch(searchIndex);